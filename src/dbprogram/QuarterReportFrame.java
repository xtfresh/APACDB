/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dbprogram;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author Montek
 */
public class QuarterReportFrame extends javax.swing.JFrame {
    Connection con;
    /**
     * Creates new form QuarterReportFrame
     */
    public QuarterReportFrame(Connection conn) {
        con = conn;
        initComponents();
    }
    public QuarterReportFrame() {
        initComponents();
    }

    public void updateView() throws SQLException{
        Statement st = con.createStatement();
        String sql = ("SELECT 3*QUARTER(CURRENT_DATE())-2 AS MONTH, S.ShelterName AS Shelter, COUNT( DISTINCT E.Date ) AS Event, COUNT( DISTINCT D.Date ) AS Donations , COUNT( DISTINCT PA.PetID ) AS Adoptions, COUNT( DISTINCT PS.PetID ) AS ShelteredPets\n" +
"FROM Shelter AS S\n" +
"LEFT OUTER JOIN Event AS E ON ( S.ShelterName = E.ShelterName\n" +
"AND MONTH( E.Date ) = 3*QUARTER( CURRENT_DATE()) -2 ) \n" +
"LEFT OUTER JOIN Donation AS D ON ( S.ShelterName = D.ShelterName\n" +
"AND MONTH( D.Date ) = 3*QUARTER( CURRENT_DATE( ) )-2 ) \n" +
"LEFT OUTER JOIN Pet AS PA ON ( S.ShelterName = PA.ShelterName\n" +
"AND MONTH( PA.ADate ) = 3*QUARTER( CURRENT_DATE( ) )-2 ) \n" +
"LEFT OUTER JOIN Pet AS PS ON ( S.ShelterName = PS.ShelterName\n" +
"AND MONTH( PS.SDate ) = 3*QUARTER( CURRENT_DATE( ) )-2 ) \n" +
"GROUP BY S.ShelterName\n" +
"\n" +
"UNION\n" +
"SELECT 3*QUARTER(CURRENT_DATE())-1, S.ShelterName, COUNT( DISTINCT E.Date ) , COUNT( DISTINCT D.Date ) , COUNT( DISTINCT PA.PetID ) , COUNT( DISTINCT PS.PetID ) \n" +
"FROM Shelter AS S\n" +
"LEFT OUTER JOIN Event AS E ON ( S.ShelterName = E.ShelterName\n" +
"AND MONTH( E.Date ) = 3*QUARTER( CURRENT_DATE()) -1 ) \n" +
"LEFT OUTER JOIN Donation AS D ON ( S.ShelterName = D.ShelterName\n" +
"AND MONTH( D.Date ) = 3*QUARTER( CURRENT_DATE( ) )-1 ) \n" +
"LEFT OUTER JOIN Pet AS PA ON ( S.ShelterName = PA.ShelterName\n" +
"AND MONTH( PA.ADate ) = 3*QUARTER( CURRENT_DATE( ) )-1 ) \n" +
"LEFT OUTER JOIN Pet AS PS ON ( S.ShelterName = PS.ShelterName\n" +
"AND MONTH( PS.SDate ) = 3*QUARTER( CURRENT_DATE( ) )-1 ) \n" +
"GROUP BY S.ShelterName\n" +
"\n" +
"UNION\n" +
"SELECT 3*QUARTER(CURRENT_DATE()), S.ShelterName, COUNT( DISTINCT E.Date ) , COUNT( DISTINCT D.Date ) , COUNT( DISTINCT PA.PetID ) , COUNT( DISTINCT PS.PetID ) \n" +
"FROM Shelter AS S\n" +
"LEFT OUTER JOIN Event AS E ON ( S.ShelterName = E.ShelterName\n" +
"AND MONTH( E.Date ) = 3*QUARTER( CURRENT_DATE())  ) \n" +
"LEFT OUTER JOIN Donation AS D ON ( S.ShelterName = D.ShelterName\n" +
"AND MONTH( D.Date ) = 3*QUARTER( CURRENT_DATE( ) ) ) \n" +
"LEFT OUTER JOIN Pet AS PA ON ( S.ShelterName = PA.ShelterName\n" +
"AND MONTH( PA.ADate ) = 3*QUARTER( CURRENT_DATE( ) ) ) \n" +
"LEFT OUTER JOIN Pet AS PS ON ( S.ShelterName = PS.ShelterName\n" +
"AND MONTH( PS.SDate ) = 3*QUARTER( CURRENT_DATE( ) ) ) \n" +
"GROUP BY S.ShelterName\n"

                      );
        ResultSet rs = st.executeQuery(sql);
        int i = 0;
        while(i < 6){
            rs.next();
            jTable1.setValueAt(rs.getString(1), i, 0);
            jTable1.setValueAt(rs.getString(2), i, 1);
            jTable1.setValueAt(rs.getString(3), i, 2);
            jTable1.setValueAt(rs.getString(4), i, 3);
            jTable1.setValueAt(rs.getString(5), i, 4);
            jTable1.setValueAt(rs.getString(6), i, 5);
            i++;   
        } 
        i=0;
        while(i < 6){
            rs.next();
            jTable2.setValueAt(rs.getString(1), i, 0);
            jTable2.setValueAt(rs.getString(2), i, 1);
            jTable2.setValueAt(rs.getString(3), i, 2);
            jTable2.setValueAt(rs.getString(4), i, 3);
            jTable2.setValueAt(rs.getString(5), i, 4);
            jTable2.setValueAt(rs.getString(6), i, 5);
            i++;   
        } 
        i=0;
        while(i < 6){
            rs.next();
            jTable3.setValueAt(rs.getString(1), i, 0);
            jTable3.setValueAt(rs.getString(2), i, 1);
            jTable3.setValueAt(rs.getString(3), i, 2);
            jTable3.setValueAt(rs.getString(4), i, 3);
            jTable3.setValueAt(rs.getString(5), i, 4);
            jTable3.setValueAt(rs.getString(6), i, 5);
            i++;   
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Month", "Shelter", "# Events", "Total Donations", "Total Adoptions", "Total Pets Recieved"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Month", "Shelter", "# Events", "Total Donations", "Total Adoptions", "Total Pets Recieved"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Month", "Shelter", "# Events", "Total Donations", "Total Adoptions", "Total Pets Recieved"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuarterReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuarterReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuarterReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuarterReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuarterReportFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
